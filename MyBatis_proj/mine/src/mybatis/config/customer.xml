<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tblcustomer">
<!-- id는 sql 을 찾는 식별값.(개발자 정의) 
     id로 구별하는 것은 mapper 파일이 많을 때 어려움이 있습니다.
		 namespace 를 설정하여  "namespace속성값.id값" 으로 dao 에서 사용
		✅ namespace 식별값은 문자열 지정방식에서는 임의로 설정합니다.
 -->
	<select id="selectByPk" parameterType="String" resultType="CustomerVo">
	<!-- 매개변수의 값은 타입과 이름으로 매핑 -->
		select * from tbl_customer
		where customer_id=#{customerId}
	</select>
	<select id="selectAll" resultType="CustomerVo">
	<!-- n개 행이지만 resultType 에 List 를 쓰지 않고 Generic Type 만 설정  -->
		select * from tbl_customer order by customer_id
	</select>
	<!-- insert, update, delete 는 resultType 이 없습니다. dao 에서는 preparedStatement 처럼 리턴 있음.  -->
	<insert id="insert" parameterType="CustomerVo">
	<!-- 매개변수의 이름은 vo 객체의 getter 를 실행합니다. (getXXXX) XXXX 이 매개변수 이름. -->
		insert into tbl_customer (customer_id,name,email,age,reg_date) 
                    values (#{customerId}, #{name}, #{email}, #{age}, sysdate)
	</insert>
	<update id="update" parameterType="CustomerVo">
		update tbl_customer
		set email = #{email}, age = #{age} 
		where customer_id = #{customerId}
	</update>
	<delete id="delete" parameterType="String">
		delete from tbl_customer

		
		 
			where customer_id = #{customerId}
	</delete>
</mapper>  
<!-- 
${}  : jsp에서 getAttribute 역할
       문자열 기호 ' ' 가 자동으로 생기지 않습니다.
#{}  : 매퍼 XML 에서 파라미터 기호
       문자열 기호 ' ' 가 자동으로 생깁니다.
 -->